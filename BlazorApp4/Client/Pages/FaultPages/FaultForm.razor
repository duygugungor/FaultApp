@page "/fault/create"
@inject HttpClient http
@inject HttpClient client
@inject NavigationManager uriHelper
@inject IJSRuntime js

<h3>Arıza Kayıt Formu</h3>

<EditForm Model="@fault">
    <DataAnnotationsValidator />

    <div>

        <div>
            <div>
                <div rows="5">
                    <label>Bölüm : </label>
                </div>
                <div float="left">
                    <select value="@fault.MakinaGrubu"  @onchange="@DoStuff">
                        <option value="">Lütfen Seçiniz</option>
                        @foreach (var item in machineList.Keys)
                        {
                            <option value="@item">@item</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => fault.MakinaGrubu)" />
                </div>
            </div>
        </div>
        <div>
            <div>
                <div rows="5">
                    <label>Makina : </label>
                </div>
                <div float="left">
                    <InputSelect @bind-Value="@fault.Makina">
                        <option value="">Lütfen Seçiniz</option>
                        @foreach (var item in makina)
                        {

                            <option value="@item">@item</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => fault.Makina)" />
                </div>
            </div>
        </div>

        <div>
            <div>
                <div rows="5">
                    <label>Makina : </label>
                </div>
                <div float="left">
                    <InputText @bind-Value="@fault.Operator">
                        <option value="Makine1">Operatör</option>
                    </InputText>
                    <ValidationMessage For="@(() => fault.Operator)" />
                </div>
            </div>
        </div>

        <div>
            <div rows="5">
                <label>Açıklama :</label>

            </div>
            <div float="left">
                <InputTextArea @bind-Value="@fault.Description" rows="7" cols="33" />
                <ValidationMessage For="@(() => fault.Description)" />

            </div>
        </div>


        <button type="submit" class="btn btn-success" @onclick="(() => CreateFault())">
            Kaydet
        </button>
    </div>



</EditForm>


@code {
    [Parameter] public BlazorApp4.Shared.Models.Fault fault { get; set; } = new BlazorApp4.Shared.Models.Fault();
    async Task CreateFault()
    {
        await client.PostAsJsonAsync("api/fault", fault);
        //uriHelper.NavigateTo("employee");
    }

    Dictionary<String, List<String>> machineList {get; set; } =
    new Dictionary<String, List<String>>()
    {
            { "EFEKT",  new List<string>() { "EFEKT-1", "EFEKT-2", "EFEKT-3", "EFEKT-4" } },
             { "RAM",  new List<string>() { "RAM-1", "RAM-2", "RAM-3", "RAM-4" } }
    };

    public List<String> makina { get; set; } = new List<String>() { "Liste Yüklenemedi" };

    public void DoStuff(ChangeEventArgs e)
    {
        var kafamdakiMakina = e.Value.ToString();
        fault.MakinaGrubu = kafamdakiMakina;
       // Console.WriteLine("It is definitely: " + kafamdakiMakina);
        makina = machineList.ContainsKey(kafamdakiMakina) ? machineList[kafamdakiMakina] : new List<String>() { "Liste Yüklenemedi" };

    }
}
