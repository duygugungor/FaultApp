@page "/fault"
@inject HttpClient http
@inject HttpClient client
@inject NavigationManager uriHelper
@inject IJSRuntime js

<h3>FaultList</h3>

<br>

@if (faultList == null)
{
    <text>Yükleniyor...</text>
}
else if (faultList.Count == 0)
{
    <text>Kayıt bulunamadı.</text>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Bölüm</th>
                <th>Makina</th>
                <th>Operatör</th>
                <th>Tarih</th>
                <th>Açıklama</th>
                @*<th>Durum</th>*@
            </tr>
        </thead>
        <tbody>
            @foreach (BlazorApp4.Shared.Models.Fault faul in faultList)
            {
            <tr>
                <td>@faul.MakinaGrubu</td>
                <td>@faul.Makina</td>
                <td>@faul.Operator</td>
                <td>@faul.CreatedTime</td>
                <td>@faul.Description</td>
                @*<td>@statusLabel(@faul.Status.ToString())</td>*@
                <td>
                    <a class="btn btn-success" href="fault/edit/@faul.Id">Bitir</a>  
                </td>
                @*<td>
            <a class="btn btn-success" href="fault/edit/@faul.Id">Edit</a>
        </td>*@
            </tr>
            }

        </tbody>
    </table>
}
@code {



    //protected override async Task OnInitializedAsync()
    //{
    //    faults = await client.GetFromJsonAsync<FaultList[]>("api/fault");
    //}

    List<BlazorApp4.Shared.Models.Fault> faultList { get; set; }
    protected override async Task OnInitializedAsync()
    {
        faultList = await client.GetFromJsonAsync<List<BlazorApp4.Shared.Models.Fault>>("api/fault");


    }

    public String statusLabel(String text)
    {
        if(text == "REPORTED")
        {
            return "RAPOR EDİLDİ";
        } else if (text == "FIXING")
        {
            return "TAMİR EDİLİYOR";
        } else if ( text == "FIXED")
        {
            return "TAMİR EDİLDİ";
        } else
        {
            return " - ";
        }
    }

}
